:root {
    --color-emphasis: #fff04a;
    --color-health: #df6767;
    --color-energy: #aef272;
    --color-oxygen: #89b1cd;
}

body {
    overflow: hidden;
}

#guiContainer {
    position: absolute;
    width: 100vw;
    height: 100vh;
    overflow: hidden;
    color: white;
    z-index: 1;
    background-size: cover;
    background-position-x: center;
    image-rendering: pixelated;
    user-select: none;
    font-size: calc(var(--scale) * 20);
}

.fullscreen {
    position: absolute;
    width: 100vw;
    height: 100vh;
    overflow: hidden;
    top:0;
    left:0;
}

.menustation {
    animation: wave 8s infinite alternate ease-in-out;
}

@keyframes wave {
    from {
        translate: 0px 100px;
    }

    to {
        translate: 0px 0px;
    }
}

.menubg {
    pointer-events: none;
    /* transform: translate(-50%,-50%); */
    scale: 110%;
    width: 100vw;
    height: 100vh;
    position: absolute;
    z-index: 0;
    background-size: cover;
    background-position-x: center;
    image-rendering: pixelated;
}

.menufg {
    z-index: 1;
}

.menufg2 {
    z-index: 2;
}

#guiContainer.mainMenu {
    background-color: #ffd599;
    --scale: calc(min(1.25px, 0.12vw));
}

.mainMenu .button {
    backdrop-filter: blur(0.5em);
    background-color: #900e00a7;
}

.mainMenu .bottomPanel {
    position: absolute;
    bottom: 10vh;
}


.mainMenu .link {
    background-color: #B03B1C;
    padding: .4em;
    border-radius: var(--borderWidth);
    color:#ffd0a1;
    /* font-weight: bold; */
    z-index: 10;
}

.mainMenu .link {
    background-color: #ffffffc4;
    padding: .4em;
    border-radius: var(--borderWidth);
    color:#000000;
    /* font-weight: bold; */
    z-index: 10;
}

.mainMenu .link em {
    color:#000000;
}


.mainMenu .button:hover {
    background-color: #de5a1db4;
    outline-color: #ffecd2ea;
}

.mainMenu .link:hover {
    background-color: #fff;
}
.gameTitle {
    font-weight: 400;
    text-transform: uppercase;
    font-size: 5vw;
    letter-spacing: 0.2em;
    text-align: center;
    margin: 0;
    width: 100vw;
    color: #b93816;
    z-index: 0;
}

.flex {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 1em;
    flex-direction: column;
    font-size: calc(var(--scale) * 20);
    transition: opacity 1s;
}

.ui {
    user-select: none;
    background-color: var(--uibg);
    padding: 1em;
    backdrop-filter: blur(2em);
    transition: transform 0.1s, outline 0.1s, opacity 1s;
    color: white;
    border-radius: 0.3em;
    z-index: 1;
    font-size: calc(var(--scale) * 20);
    opacity: 1;
}

.ui em {
    font-style: inherit;
    font-weight: 700;
    color: var(--color-emphasis);
}

.flex.hidden {
    transition: opacity 1s;
    opacity: 0;
}

.ui .ui {
    backdrop-filter: none;
}

.ui.blank {
    border-radius: initial;
    transition: initial;
    padding: 0;
    background: none;
    backdrop-filter: none;
}

.collapsible {
    min-height: 2em;
    min-width: 4em;
    padding: 0;
    position: absolute;
    background-color: var(--uibg);
    transition: translate 1s, opacity 1s;
    --reveal-width: 4em;
    --rv: var(--reveal-width);
    overflow: hidden;
    gap: 0;
}

/* .collapsible.collapsed:hover {
    --rv: calc(var(--reveal-width) + .5em);
} */

.collapsible-left {
    left: 0;
    flex-direction: row-reverse;
    border-radius: 0 .3em .3em 0;
}

.collapsible-right {
    right: 0;
    flex-direction: row;
    border-radius: .3em 0 0 .3em;
}

.collapsible-top {
    top: 0;
    flex-direction: column-reverse;
    border-radius: 0 0 .3em .3em;
}

.collapsible-bottom {
    bottom: 0;
    flex-direction: column;
    border-radius: .3em .3em 0 0;
}

.collapsible-left.collapsed {
    translate: calc(-1 * (100% - var(--rv))) 0;
}

.collapsible-right.collapsed {
    translate: calc(100% - var(--rv)) 0;
}

.collapsible-top.collapsed {
    translate: 0 calc(-1 * (100% - var(--rv)));
}

.collapsible-bottom.collapsed {
    translate: 0 calc(100% - var(--rv));
}

.collapsible-left .collapsibleClicker,
.collapsible-right .collapsibleClicker {
    writing-mode: vertical-lr;
    padding: 1em 0;
    width: var(--reveal-width);

}

.collapsible-top .collapsibleClicker,
.collapsible-bottom .collapsibleClicker {
    padding: 0 1em;
    height: var(--reveal-width);

}

.collapsible-left .collapsibleContent,
.collapsible-right .collapsibleContent {
    flex-direction: row;

}

.collapsible-top .collapsibleContent,
.collapsible-bottom .collapsibleContent {
    flex-direction: column;

}

.collapsibleClicker {
    background-color: transparent;
    align-self: stretch;
    transition: background-color .2s;
    box-sizing: unset;
}

.collapsibleContent {
    flex-direction: row;
    padding: 1em;
}

.collapsibleClicker:hover {
    background-color: rgba(255, 255, 255, 0.161);
}

.fill {
    width: 100%;
    height: 100%;
}

.ui.fill {
    width: 100%;
    height: 100%;
}

.tooltip {
    outline: none;
    white-space: nowrap;
}

.tooltipContainer {
    gap: 5px;
}

.label {
    z-index: 0;
    right: unset;
    transform: translateX(-50%);
    white-space: nowrap;
    transition: none;
    will-change: opacity, left, top;
}

.label::after {
    content: "";
    position: absolute;
    left: 0;
    right: 0;
    margin: 0 auto;
    width: var(--borderWidth);
    height: 4em;
    top: -4em;
    background-color: white;
}

kbd {
    display: inline-block;
    /*
    outline: calc(var(--borderWidth)*.75) solid rgb(255, 255, 255);
    */

    background: white;
    color: black;

    padding: 2px 10px;
    margin: 0px 5px;
    text-transform: uppercase;
    min-width: 29px;
    text-align: center;
    font-style: initial;
    font-weight: 600;
    border-radius: .3em;
    font-family: inherit;
    /* border-bottom: var(--borderWidth) solid rgb(216, 216, 216); */
    transition-property: outline-width, outline-offset;
    transition-timing-function: ease-in-out;
    transition-duration: .1s;
    outline: 0 solid var(--outline-color-active);
}

kbd.pressed {
    outline-width: var(--borderWidth);
    border-bottom-width: 0;
    outline-offset: var(--borderWidth);
    /* translate: 0px var(--borderWidth); */
}

.scanners th,
.scanners td {
    padding: 0 10px;
}

.button {
    /* display: block; */
    overflow: hidden;
    cursor: var(--cursor-pointer);
    flex-grow: 0;
    width: fit-content;
    outline: var(--borderWidth) solid var(--outline-color-inactive);
    will-change: scale;
    text-align: center;
}

.button.disabled {
    pointer-events: none;
    outline: none;
    opacity: .4;
}

.button>img {
    height: 1em;
    scale: 200%;
}

.button.img {
    padding: 0.2em;
    height: fit-content;
}

.button.img>img {
    scale: initial;
    height: 3em;
}

.button:hover {
    background-color: #49494984;
    outline: var(--borderWidth) solid var(--outline-color-active);
    /* outline-offset: var(--borderWidth); */
    transform: scale(1.06);
}

.tutorialPrompt {
    padding: 2em;
    top: 15vh;
    outline: var(--borderWidth) solid white;
    opacity: 0;
    outline-color: transparent;
    text-align: center;
    max-width: 30vw;
    line-height: 1.5em;
}

.tutorialPrompt:last-of-type {
    outline-color: white;
    opacity: 1;
    animation: pulse .5s cubic-bezier(0.41, 0, 0.14, 1) infinite alternate;
}

.tutorialPrompt:last-of-type.hidden {
    opacity: 0;
}

.tutorialPrompt br {
    display: block;
    /* makes it have a width */
    content: "";
    /* clears default height */
    margin-top: 1.5em;
    /* change this to whatever height you want it */
}

.introText {
    pointer-events: none;
    position: absolute;
    top: 0;
    left: 0;
    margin: 0;
    width: 100vw;
    height: 100vh;
    overflow: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    font-size: 2em;
    animation-fill-mode: both;
    animation-timing-function: linear;
    font-weight: 100;
    flex-direction: column;
    text-shadow: 0px 5px 30px black;
    z-index: 30;
}

.introText.small {
    animation-name: intro;
    animation-duration: 8s;
}

.introText.big {
    font-size: 7em;
    animation-name: introbig;
    animation-duration: 10s;
}

.splash {
    pointer-events: none;
    position: absolute;
    top: 0;
    left: 0;
    margin: 0;
    width: 100vw;
    height: 100vh;
    overflow: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    font-size: 4em;
    animation: none;
    animation: splash 7s;
    animation-fill-mode: both;
    animation-timing-function: linear;
    letter-spacing: 0.1em;
    font-weight: 100;
    flex-direction: column;
    text-shadow: 0px 5px 30px black;
    text-transform: uppercase;
    display: none;
    transition: opacity 1s;
}

.splash:last-of-type {
    display: flex;
}

.splash.discovery::after {
    text-transform: lowercase;
    content: "new biome discovered";
    font-size: 0.4em;
    display: block;
    letter-spacing: 0;
}

@keyframes splash {
    from {
        opacity: 0;
        letter-spacing: 0em;
    }

    20% {
        opacity: 1;
    }

    80% {
        opacity: 1;
    }

    to {
        opacity: 0;
        letter-spacing: 0.05em;
    }
}

@keyframes intro {
    from {
        opacity: 0;
    }

    20% {
        opacity: 1;
    }

    80% {
        opacity: 1;
    }

    to {
        opacity: 0;
    }
}

@keyframes introbig {
    from {
        opacity: 0;
        letter-spacing: .2em;
    }

    20% {
        opacity: 1;
    }

    80% {
        opacity: 1;
    }

    to {
        opacity: 0;
        letter-spacing: .25em;
    }
}

.progressBar {
    background-color: rgba(0, 0, 0, 0.599);
    height: .3em;
    width: 10em;
    border-radius: .3em;
    overflow: hidden;
    position: relative;

}

.progressBarFill {
    height: 100%;
    width: 50%;
    border-radius: .3em;
    position: absolute;
    top:0;
}

.smoothFill {
    opacity: .2;
    transition: width .5s;
    z-index: 100;
}

.flashRed {
    outline: var(--borderWidth) solid red;
    animation: flashRed .5s cubic-bezier(0.1, 0, 0.9, 1) infinite alternate;
}


@keyframes flashRed {
    from {
        outline-color: red;
    }

    to {
        outline-color: rgba(255, 0, 0, 0.283);
    }
}

.speechBubble {
    translate: -50% 0;
    overflow: hidden;
    text-wrap: nowrap;
    max-width: 200em;
    animation: speechAppear .3s linear forwards;
    padding: .6em;
    text-align: center;
}

@keyframes speechAppear {
    from {
        max-width: 0em;
        opacity: 0;
    }

    50% {
        opacity: 1;
    }

    99% {
        text-wrap: nowrap;
    }

    to {
        max-width: 30em;
        text-wrap: wrap;
    }
}

.centered {
    text-align: center;
}